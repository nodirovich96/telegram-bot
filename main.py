import sqlite3
from datetime import datetime
import telebot
from config import TOKEN, ADMIN_ID
from object import category_list
import logging
from button import (send_photo_button, catalog_button, category_button_all, insert_and_back_button,
                    confirm_button, quantity_button, order_comment)



admin = ADMIN_ID
bot = telebot.TeleBot(TOKEN)




def conn():
    """–§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â—è–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î SQLite"""
    con = None
    try:
        con = sqlite3.connect('marketdb.db')
        return con
    except Exception:
        if con:
            con.close()
        return False


@bot.message_handler(commands=['start'])
def send_welcome(message):
    """–§—É–Ω–∫—Ü–∏—è –≤—ã–∑–∞–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ—Å—Ç—å –ª–∏ –∫–ª–∏–µ–Ω—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
       –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Ç–æ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è <<<restourant_name>>>
       –í –æ–±—Ä–æ—Ç–Ω–æ–º —Å–ª—É—á–∞–µ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è <<<catalog_send>>>"""
    con = None
    try:
        bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å\n")
        con = conn()
        cursor = con.cursor()
        cursor.execute(f"""SELECT user_id FROM users WHERE user_id = '{message.from_user.id}'""")
        user_id = cursor.fetchall()
        if user_id:
            bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=catalog_button())
        else:
            bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞\n")
            bot.register_next_step_handler(message, restoraunt_name)

    except Exception as ex:
        bot.send_message(message, f"–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞")

    finally:
        if con:
            con.close()


@bot.message_handler(content_types=['contact'])
def contact_handler(message):
    """–§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–≤–æ–π –Ω–æ–º–µ—Ä –æ—Ç–ø—Ä–∞–≤–∏–ª –∫–ª–∏–µ–Ω—Ç –∏–ª–∏ –Ω–µ—Ç!
       –í —Å–ª—É—á–∞–∏ –µ—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–≤–æ–π –Ω–æ–º–µ—Ä –æ–Ω –¥–µ–ª–∞–µ—Ç UPDATE –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ –±–∞–∑—É –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"""
    con = None
    try:
        con = conn()
        cursor = con.cursor()

        if message.contact:
            if message.contact.user_id == message.from_user.id:
                phone_number = message.contact.phone_number
                cursor.execute(f"""
                    UPDATE users SET phone = '{message.contact.phone_number}' WHERE user_id = {message.from_user.id}
                """)
                con.commit()

                bot.send_message(message.chat.id, f"–°–ø–∞—Å–∏–±–æ! –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {phone_number}")
                catalog_send(message)
            else:
                bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞: –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –≤–∞—à–∏–º –∞–∫–∫–∞—É–Ω—Ç–æ–º.")
        else:
            bot.send_message(message.chat.id, "–í—ã –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

    except Exception as ex:
        if con:
            con.rollback()
            bot.send_message(message.chat.id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")
            send_welcome(message)

    finally:
        if con:
            con.close()


@bot.message_handler(content_types=['text'])
def catalog_send(message):
    """–§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∫–æ—Ç–∞–ª–æ–≥ –ø—Ä–æ–¥—É–∫—Ç–æ–≤!"""
    t_message = message.text
    if message.contact:
        bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=catalog_button())
    elif t_message in category_list:
        catalog_1(message, t_message)
    elif t_message == "–ö–æ—Ä–∑–∏–Ω–∞ üß∫":
        cart_get(message)
    elif t_message == "–ú–æ–∏ –∑–∞–∫–∞–∑—ã ‚úÖ":
        get_orders(message)

def restoraunt_name(message):
    """–§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞–∑–≤–∞–Ω–∏–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ –∏
    —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã–µ (USER_ID, RESTOURANT_NAME, USER_NAME)!"""
    t_message = message.text
    con = None
    try:
        con = conn()
        cursor = con.cursor()
        cursor.execute(f"""INSERT INTO users (user_id, restaurant_name, user_name) 
            VALUES ({message.from_user.id},'{t_message}', '{message.from_user.username}')""")
        con.commit()
        bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä!", reply_markup=send_photo_button())

    except Exception as ex:
        if con:
            con.rollback()
            bot.send_message(message.chat.id, f"–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞")
            send_welcome(message)

    finally:
        if con:
            con.close()



def catalog_1(message, text_message):
    """–§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞ –∏ –≤–æ–∑–≤—Ä–∞—â—è–µ—Ç —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—â–∞—è –∫ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    product_list = []
    con = None
    try:
        con = conn()
        cursor = con.cursor()
        cursor.execute("""
            SELECT product_name, category_id
            FROM product
            JOIN category USING(category_id)
            WHERE category_name = ? AND discontinued = 1
        """, (text_message,))
        product = cursor.fetchall()
        for i in range(len(product)):
            product_list.append(product[i][0])
        category_photo = product[0][1]
        with open(f'images/{category_photo}.jpg', 'rb') as photo:
            bot.send_photo(message.chat.id, photo, caption="<b>–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–¥—É–∫—Ç</b>‚¨áÔ∏è", parse_mode="HTML",
                           reply_markup=category_button_all(product_list))
        bot.register_next_step_handler(message, catalog1_product)

    except Exception as ex:
        if con:
            con.rollback()
    finally:
        if con:
            con.close()


def catalog1_product(message):
    """–§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∏—Ç –Ω–∞ –∫–∞–∫–æ–π –ø—Ä–æ–¥—É–∫—Ç –Ω–∞–∂–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–æ–π —Ç–æ–≤–∞—Ä –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
       –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–æ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è <<<insert_or_back>>>, –∞ –µ—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥ —Ç–æ
       –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ –º–µ–Ω—é –∫–∞—Ç–∞–ª–æ–≥–∞!"""
    con = None
    try:
        if message.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥":
            bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=catalog_button())
            catalog_send(message)
        elif message.text != "‚¨ÖÔ∏è –ù–∞–∑–∞–¥":
            con = conn()
            cursor = con.cursor()
            cursor.execute("""
                SELECT product_name, price, category_name
                FROM product
                JOIN category USING(category_id)
                WHERE product_name = ? AND discontinued = 1
            """, (message.text,))
            product = cursor.fetchall()
            if product:
                bot.send_message(message.chat.id,
                                 f"–¢–æ–≤–∞—Ä: <b>{product[0][0]}</b>\n\n –¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞: <b>{product[0][1]:,} —Å—É–º</b>".replace(
                                     ',', ' '),
                                 reply_markup=insert_and_back_button(), parse_mode="HTML")
                bot.register_next_step_handler(message, insert_or_back, product[0][0], product[0][2])
            else:
                bot.send_message(message.chat.id,
                                 f"–í–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Ç—Ä–µ–±—É–µ–º–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
                                 reply_markup=catalog_button())
                #catalog_1(message, product[0][2])

    except Exception as ex:
        logging.info(f'–û—à–∏–±–∫–∞ {ex}')

    finally:
        if con:
            con.close()


def insert_or_back(message, product, category_name):
    """–§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ—Å–ª–∏ –∫–ª–∏–µ—Ç –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä —Ç–æ –±–æ—Ç –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å–ª–µ —á–µ–≥–æ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è
       —Ñ—É–Ω–∫—Ü–∏—è <<<insert_data>>>, –∞ –µ—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –Ω–∞–∂–∞–ª –Ω–∞ –∫–æ–Ω–∫—É –Ω–∞–∑–∞–¥ —Ç–æ –≤—ã–∑–æ–≤–∏—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è <<<catalog_1>>>"""
    if message.text == "–î–æ–±–∞–≤–∏—Ç—å":
        bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–∏—Ç–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: ", reply_markup=quantity_button())
        bot.register_next_step_handler(message, insert_data, product, category_name)

    elif message.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥":
        catalog_1(message, category_name)

    else:
        catalog1_product(message)


def insert_data(message, product, category):
    """–§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞–≤–∑–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –±–∞–∑—É CART (user_id, product_id, quantity),
       –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–Ω –ø–æ–ª—É—á–∞–µ—Ç –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞"""
    con = None
    try:
        if message.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥":
            catalog_1(message, category)
        elif int(message.text):
            con = conn()
            cursor = con.cursor()
            cursor.execute("""
                SELECT product_id, category_name
                FROM product
                JOIN category USING(category_id)
                WHERE product_name = ? AND discontinued = 1
            """, (product,))
            category_id = cursor.fetchall()
            cursor.execute("""
                INSERT INTO cart (user_id, product_id, quantity)
                VALUES (?, ?, ?)
            """, (message.from_user.id, category_id[0][0], int(message.text)))
            con.commit()
            bot.send_message(message.chat.id, f"–¢–æ–≤–∞—Ä {product} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ö–æ—Ä–∑–∏–Ω—É!")
            catalog_1(message, category_id[0][1])


    except Exception as ex:
        if con:
            con.rollback()
        bot.send_message(message.chat.id,
                         f"–í–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Ç—Ä–µ–±—É–µ–º–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
                         reply_markup=catalog_button())
        catalog_1(message, category)

    finally:
        if con:
            con.close()
        #catalog_1(message, category_id[0][1])


def cart_get(message):
    con = None
    cart = ""
    cart_to_admin = ""
    try:
        con = conn()
        cursor = con.cursor()
        cursor.execute("""
            SELECT product_name, price, quantity, quantity * price, phone, restaurant_name 
            FROM cart 
            JOIN product USING(product_id) 
            JOIN users USING(user_id) 
            WHERE user_id = ?
        """, (message.from_user.id,))
        product = cursor.fetchall()
        if product:
            for i in range(len(product)):
                cart += (
                    f"–ü—Ä–æ–¥—É–∫—Ç: <b>{product[i][0]}</b>\n–¶–µ–Ω–∞: <b>{product[i][1]:,} —Å—É–º!</b>\n"
                    f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: <b>{product[i][2]}\n</b>"
                    f"–ò—Ç–æ–≥–æ: <b>{product[i][3]:,}</b> —Å—É–º\n\n").replace(',', ' ')
            cart_to_admin += f"{cart}–†–µc—Ç–æ—Ä–∞–Ω: <b>{product[0][5]}</b>\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: <b>{product[0][4]}</b>"
            bot.send_message(message.chat.id, f"{cart}", reply_markup=confirm_button(), parse_mode="HTML")
            bot.register_next_step_handler(message, confirm, cart_to_admin)
        else:
            bot.send_message(message.chat.id, f"–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞!", reply_markup=catalog_button())


    except Exception as ex:
        if con:
            con.rollback()

    finally:
        if con:
            con.close()

@bot.message_handler(content_types=['text'])
def confirm(message, cart):
    con = None
    try:
        if message.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥":
            bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=catalog_button())
            catalog_send(message)
        elif message.text == "–û—á–∏—Å—Ç–∏—Ç—å":
            con = conn()
            cursor = con.cursor()
            cursor.execute(f"""DELETE FROM cart WHERE user_id = {message.from_user.id}""")
            con.commit()
            bot.send_message(message.chat.id, f"–ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞!", reply_markup=catalog_button())
            catalog_send(message)
        elif message.text == "–ó–∞–∫–∞–∑–∞—Ç—å":
            bot.send_message(message.chat.id, f"–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–∫–∞–∑—É", reply_markup=order_comment())
            bot.register_next_step_handler(message, order, cart)

        else:
            bot.send_message(message.chat.id, f"–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–±–æ—Ä", reply_markup=catalog_button())
            catalog_send(message)

    except Exception as ex:
        if con:
            con.rollback()
            bot.send_message(message, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")
            catalog_send(message)

    finally:
        if con:
            con.close()


def order(message, cart):
    con = None
    try:
        if message.text == '‚¨ÖÔ∏è –ù–∞–∑–∞–¥':
            bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=catalog_button())
            catalog_send(message)

        elif message.text == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∏ –∑–∞–∫–∞–∑–∞—Ç—å':
            date_now = datetime.now().date()
            date_format = date_now.strftime("%d-%m-%Y")
            date_str = str(date_format)
            con = conn()
            cursor = con.cursor()
            cursor.execute(f"""INSERT INTO orders (user_id, order_details, date) 
                                            VALUES (?, ?, ?)""",
                           (message.from_user.id, cart, date_str))
            order_id = cursor.lastrowid
            cart = f'ID –ó–∞–∫–∞–∑–∞: {order_id}\n{cart}'
            cursor.execute(f"""
                INSERT INTO order_details (user_id, product_id, quantity) SELECT user_id, product_id, quantity FROM 
                cart WHERE user_id = {message.from_user.id}
            """)
            cursor.execute(f"""DELETE FROM cart WHERE user_id = {message.from_user.id}""")
            con.commit()
            bot.send_message(message.chat.id, f"–í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç!", reply_markup=catalog_button())
            bot.send_message(admin, cart, parse_mode="HTML")
            catalog_send(message)

        else:
            date_now = datetime.now().date()
            date_format = date_now.strftime("%d-%m-%Y")
            date_str = str(date_format)
            bot.send_message(message.chat.id, f"–í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç!", reply_markup=catalog_button())
            con = conn()
            cursor = con.cursor()
            cursor.execute(f"""INSERT INTO orders (user_id, order_details, date, comment) 
                                VALUES (?, ?, ?, ?)""", (message.from_user.id, cart, date_str, message.text))
            order_id = cursor.lastrowid
            cart = f'ID –ó–∞–∫–∞–∑–∞: {order_id}\n{cart}\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {message.text}'
            cursor.execute(f"""
                            INSERT INTO order_details (user_id, product_id, quantity) SELECT user_id, product_id, quantity FROM 
                            cart WHERE user_id = {message.from_user.id}
                        """)
            cursor.execute(f"""DELETE FROM cart WHERE user_id = {message.from_user.id}""")
            con.commit()
            bot.send_message(admin, cart, parse_mode="HTML")
            catalog_send(message)

    except Exception as ex:
        if con:
            con.rollback()
            bot.send_message(message.chat.id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")
            catalog_send(message)

    finally:
        if con:
            con.close()


def get_orders(message):
    con = None
    try:
        con = conn()
        cursor = con.cursor()
        cursor.execute(f"""SELECT orders_id, order_details, date, comment FROM orders 
                        WHERE user_id = {message.from_user.id} ORDER BY orders_id DESC LIMIT 5""")
        order = cursor.fetchall()
        if order:
            for i in order[::-1]:
                send_order = f"ID –ó–∞–∫–∞–∑–∞: <b>{i[0]}\n{i[1]}</b>\n–î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞: <b>{i[2]}–≥.</b>\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: <b>{i[3]}</b>"
                bot.send_message(message.chat.id, send_order, parse_mode="HTML")
        else:
            bot.send_message(message.chat.id, "–í–∞—à —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤ –ø—É—Å—Ç!")
    except Exception:
        print(f"–û—à–∏–±–∫–∞")
        if con:
            con.close()


if __name__ == "__main__":
    try:
        print("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞!")
        bot.infinity_polling()
    except Exception as ex:
        logging.info(f'–û—à–∏–±–∫–∞ {ex}')
