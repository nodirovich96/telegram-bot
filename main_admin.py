import sqlite3
import telebot
from telebot.types import ReplyKeyboardRemove
from config import ADMIN_TOKEN, ADMIN_ID
from object import category_list
from button import (send_photo_button, catalog_button_for_admin, category_button_all, insert_and_back_button_admin,
                    quantity_button, back, add_product_for_admin)
import pandas as pd




admin = ADMIN_ID

bot = telebot.TeleBot(ADMIN_TOKEN)

def conn():
    """–§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â—è–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î SQLite"""
    con = None
    try:
        con = sqlite3.connect('marketdb.db')
        return con
    except Exception:
        if con:
            con.close()
        return False

@bot.message_handler(commands=['get_db'])
def get_db(message):
    try:
        if message.from_user.id == admin:
            path = 'marketdb.db'
            bot.send_document(message.chat.id, document=open(path,'rb'), visible_file_name="marketdb.db")
        else:
            bot.send_message(message.chat.id, '–î–æ—Å—Ç—É–ø –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –¥–ª—è –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!')

    except Exception as ex:
        bot.send_message(message.chat.id, f'–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞! {ex}')

@bot.message_handler(commands=['start'])
def send_welcome(message):
    """–§—É–Ω–∫—Ü–∏—è –≤—ã–∑–∞–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ—Å—Ç—å –ª–∏ –∫–ª–∏–µ–Ω—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
       –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Ç–æ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è <<<restourant_name>>>
       –í –æ–±—Ä–æ—Ç–Ω–æ–º —Å–ª—É—á–∞–µ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è <<<catalog_send>>>"""
    try:
        if message.from_user.id == admin:
            bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –∞–¥–º–∏–Ω!\n", reply_markup=catalog_button_for_admin())
            bot.register_next_step_handler(message, catalog_send)
        else:
            bot.send_message(message.chat.id, "–î–æ—Å—Ç—É–ø –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –¥–ª—è –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!\n")
    except Exception as ex:
        bot.send_message(message, f"–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ {ex}")


@bot.message_handler(content_types=['photo'])
def send_welcome(message):
    try:
        if message.from_user.id == admin:
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ–≤—Ä–∏—é –≥–¥–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å/–¥–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ",
                                                    reply_markup= add_product_for_admin())

            bot.register_next_step_handler(message, save_photo, message.photo[-1])
        else:
            bot.send_message(message.chat.id, "–î–æ—Å—Ç—É–ø –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –¥–ª—è –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!\n")
    except Exception as ex:
        bot.send_message(message, f"–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ {ex}")

def save_photo(message, photo):
    con = None
    try:
        if message.text == '‚¨ÖÔ∏è –ù–∞–∑–∞–¥':
            bot.send_message(admin, f"–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=catalog_button_for_admin())
        else:
            con = conn()
            cursor = con.cursor()
            cursor.execute("""SELECT category_id FROM category WHERE category_name = ?""", (message.text,))
            category_id = cursor.fetchall()
            file_info = bot.get_file(photo.file_id)
            downloaded_file = bot.download_file(file_info.file_path)
            file_path = f'images/{category_id[0][0]}.jpg'
            with open(file_path, "wb") as new_file:
                new_file.write(downloaded_file)
            bot.send_message(message.chat.id, f'–í—ã –ø–æ–º–µ–Ω—è–ª–∏ —Ñ–æ—Ç–æ!', reply_markup=catalog_button_for_admin())


    except Exception as ex:
        bot.send_message(message.chat.id, f'–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ {ex}', reply_markup=catalog_button_for_admin())

    finally:
        if con:
            con.close()


@bot.message_handler(content_types=['text'])
def catalog_send(message):
    """–§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∫–æ—Ç–∞–ª–æ–≥ –ø—Ä–æ–¥—É–∫—Ç–æ–≤!"""
    t_message = message.text
    if t_message in category_list and message.from_user.id == admin:
        catalog_1(message, t_message)
    elif t_message == "–ö–æ—Ä–∑–∏–Ω–∞ üß∫" and message.from_user.id == admin:
        cart_get(message)
    elif t_message == "–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä" and message.from_user.id == admin:
        bot.send_message(admin, f"–í –∫–∞–∫—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–æ–±–∞–≤–∏–º —Ç–æ–≤–∞—Ä?", reply_markup=add_product_for_admin())
        bot.register_next_step_handler(message, new_product)
    elif t_message == "–û—Ç—á–µ—Ç –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º" and message.from_user.id == admin:
        dataframe(message)
    elif t_message == "–ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏" and message.from_user.id == admin:
        bot.send_message(admin, f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ")



def dataframe(message):
    con = None
    try:
        con = conn()
        df = pd.read_sql("""SELECT user_id, user_name, phone, restaurant_name, category_name, product_name, discontinued, price, quantity, 
        (price * quantity) as total_price, date FROM users JOIN order_details USING(user_id) JOIN product USING(product_id) 
         JOIN category USING(category_id)""", con)
        if df.empty:
            bot.send_message(admin, f'DataFrame –ø—É—Å—Ç–æ–π')
        else:
            df = df.rename(columns={
                'user_id': '–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
                'user_name': '–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
                'phone': '–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞',
                'restaurant_name': '–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞',
                'category_name': '–ö–∞—Ç–µ–≥–æ—Ä–∏—è —Ç–æ–≤–∞—Ä–∞',
                'product_name': '–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞',
                'discontinued': '–°—Ç–∞—Ç—É—Å —Ç–æ–≤–∞—Ä–∞',
                'price': '–¶–µ–Ω–∞ –∑–∞ –µ–¥.',
                'quantity': '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ',
                'total_price': '–°—É–º–º–∞',
                'date': '–î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞'
            })

            df.to_csv('dataframe/DataFrame.csv', sep=";", encoding="cp1251", index=False)
            with open('dataframe/DataFrame.csv', 'rb') as file:
                bot.send_document(admin, file)

    except Exception as ex:
        bot.send_message(admin, f'–û—à–∏–±–∫–∞ {ex}')
    finally:
        if con:
            con.close()


def new_product(message):
    try:
        if message.text == '‚¨ÖÔ∏è –ù–∞–∑–∞–¥':
            bot.send_message(admin, f"–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=catalog_button_for_admin())

        elif message.text in category_list and message.from_user.id == admin:
            bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞', reply_markup=back())
            bot.register_next_step_handler(message, product_name, message.text)

        else:
            bot.send_message(message.chat.id, '–¢–∞–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ—Ç', reply_markup=catalog_button_for_admin())
    except Exception as ex:
        bot.send_message(message.chat.id, f'–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ {ex}', reply_markup=catalog_button_for_admin())

def product_name(message, category_name):
    try:
        if message.text == '‚¨ÖÔ∏è –ù–∞–∑–∞–¥':
            bot.send_message(admin, f"–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=catalog_button_for_admin())
        else:
            bot.send_message(admin, f"–¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞", reply_markup=back())
            bot.register_next_step_handler(message, add_product, category_name,
                                                                  message.text)

    except Exception as ex:
        bot.send_message(admin, f"–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ {ex}", reply_markup=catalog_button_for_admin())
            

def add_product(message, *args):
    con = conn()
    try:
        if message.text == '‚¨ÖÔ∏è –ù–∞–∑–∞–¥':
            bot.send_message(admin, f"–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=catalog_button_for_admin())
        elif int(message.text.replace(' ','')):
            con = conn()
            cursor = con.cursor()
            cursor.execute("""SELECT category_id FROM category WHERE category_name = ?""", (args[0],))
            category_id = cursor.fetchall()
            cat_id_int = int(category_id[0][0])
            cursor.execute("""INSERT INTO product (category_id, product_name, price) VALUES (?, ?, ?)""",
                           (cat_id_int, args[1], int(message.text.replace(' ',''))))
            con.commit()
            bot.send_message(admin, f"–ù–æ–≤—ã–π —Ç–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω!", reply_markup=catalog_button_for_admin())
        else:
            bot.send_message(admin, f"–û—à–∏–±–∫–∞", reply_markup=catalog_button_for_admin())

    except Exception as ex:
        bot.send_message(admin, f"–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ {ex}", reply_markup=catalog_button_for_admin())
        if con:
            con.rollback()

    finally:
        if con:
            con.close()


def restoraunt_name(message):
    """–§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞–∑–≤–∞–Ω–∏–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ –∏
    —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã–µ (USER_ID, RESTOURANT_NAME, USER_NAME)!"""
    t_message = message.text
    con = None
    try:
        con = conn()
        cursor = con.cursor()
        cursor.execute(f"""INSERT INTO users (user_id, restaurant_name, user_name) 
            VALUES ({message.from_user.id},'{t_message}', '{message.from_user.username}')""")
        con.commit()
        bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä!", reply_markup=send_photo_button())

    except Exception as ex:
        if con:
            con.rollback()
            bot.send_message(message.chat.id, f"–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ {ex}")
            send_welcome(message)

    finally:
        if con:
            con.close()



def catalog_1(message, text_message):
    """–§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞ –∏ –≤–æ–∑–≤—Ä–∞—â—è–µ—Ç —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—â–∞—è –∫ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    product_list = []
    con = None
    try:
        if message.from_user.id == admin:
            con = conn()
            cursor = con.cursor()
            cursor.execute("""
                SELECT product_name, category_id
                FROM product
                JOIN category USING(category_id)
                WHERE category_name = ? AND discontinued = 1
            """, (text_message,))
            product = cursor.fetchall()
            for i in range(len(product)):
                product_list.append(product[i][0])
            category_photo = product[0][1]
            with open(f'images/{category_photo}.jpg', 'rb') as photo:
                bot.send_photo(message.chat.id, photo, caption="–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–¥—É–∫—Ç",
                               reply_markup=category_button_all(product_list))
            bot.register_next_step_handler(message, catalog1_product)
        else:
            bot.send_message(message.chat.id, f"–í—ã –Ω–µ –∞–¥–º–∏–Ω")

    except Exception:
        if con:
            con.rollback()
    finally:
        if con:
            con.close()


def catalog1_product(message):

    """–§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∏—Ç –Ω–∞ –∫–∞–∫–æ–π –ø—Ä–æ–¥—É–∫—Ç –Ω–∞–∂–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–æ–π —Ç–æ–≤–∞—Ä –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
       –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–æ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è <<<insert_or_back>>>, –∞ –µ—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥ —Ç–æ
       –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ –º–µ–Ω—é –∫–∞—Ç–∞–ª–æ–≥–∞!"""
    con = None
    try:
        if message.from_user.id == admin:
            if message.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥":
                bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ–≤—Ä–∏—é!\n", reply_markup=catalog_button_for_admin())
                catalog_send(message)
            elif message.text != "‚¨ÖÔ∏è –ù–∞–∑–∞–¥":
                con = conn()
                cursor = con.cursor()
                cursor.execute("""
                    SELECT product_name, price, category_name
                    FROM product
                    JOIN category USING(category_id)
                    WHERE product_name = ? AND discontinued = 1
                """, (message.text,))
                product = cursor.fetchall()
                if product:
                    bot.send_message(message.chat.id,
                                     f"–¢–æ–≤–∞—Ä: <b>{product[0][0]}</b>\n\n"
                                     f" –¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞: <b>{product[0][1]:,} —Å—É–º</b>".replace(',', ' '),
                                     reply_markup=insert_and_back_button_admin(), parse_mode="HTML")
                    bot.register_next_step_handler(message, insert_or_back, product[0][0], product[0][2])
                else:
                    bot.send_message(message.chat.id,
                                     f"–í–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Ç—Ä–µ–±—É–µ–º–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
                                     reply_markup=catalog_button_for_admin())
                    #catalog_1(message, product[0][2])
        else:
            bot.send_message(message.chat.id, f"–í—ã –Ω–µ –∞–¥–º–∏–Ω")

    except Exception as ex:
        print("–û—à–∏–±–∫–∞")

    finally:
        if con:
            con.close()


def insert_or_back(message, product, category_name):
    """–§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ—Å–ª–∏ –∫–ª–∏–µ—Ç –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä —Ç–æ –±–æ—Ç –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å–ª–µ —á–µ–≥–æ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è
       —Ñ—É–Ω–∫—Ü–∏—è <<<insert_data>>>, –∞ –µ—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –Ω–∞–∂–∞–ª –Ω–∞ –∫–æ–Ω–∫—É –Ω–∞–∑–∞–¥ —Ç–æ –≤—ã–∑–æ–≤–∏—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è <<<catalog_1>>>"""
    if message.from_user.id == admin:
        if message.text == "–ò–∑–º–µ–Ω–∏—Ç—å":
            bot.send_message(message.chat.id, f"–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤—É—é —Ü–µ–Ω—É: ", reply_markup=ReplyKeyboardRemove())
            bot.register_next_step_handler(message, insert_data, product, category_name)

        elif message.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥":
            catalog_1(message, category_name)
        elif message.text == "–£–¥–∞–ª–∏—Ç—å":
            delete_product(message,product)
        else:
            catalog1_product(message)
    else:
        bot.send_message(message.chat.id, f"–í—ã –Ω–µ –∞–¥–º–∏–Ω")

def delete_product(message, product):
    con = conn()
    try:
        con = conn()
        cursor = con.cursor()
        cursor.execute("""SELECT product_id FROM product WHERE product_name = ? AND discontinued = 1
                                ORDER BY product_id DESC LIMIT 1""", (product,))
        prod_id = cursor.fetchall()
        cursor.execute("""UPDATE product SET discontinued = 0 WHERE product_id = ?""", (prod_id[0][0],))
        cursor.execute("""DELETE FROM cart WHERE product_id = ?""", (prod_id[0][0],))
        con.commit()
        bot.send_message(message.chat.id, f"–¢–æ–≤–∞—Ä —É–¥–∞–ª—ë–Ω", reply_markup=catalog_button_for_admin())


    except Exception as ex:
        bot.send_message(message.chat.id, f"–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ {ex}", reply_markup=catalog_button_for_admin())
        if con:
            con.rollback()

    finally:
        if con:
            con.close()


def insert_data(message, product, category):
    """–§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞–≤–∑–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –±–∞–∑—É CART (user_id, product_id, quantity),
       –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–Ω –ø–æ–ª—É—á–∞–µ—Ç –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞"""
    con = None
    try:
        if message.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥":
            catalog_1(message, category)

        elif message.from_user.id == admin:
            if int(message.text):
                con = conn()
                cursor = con.cursor()
                cursor.execute("""
                    SELECT product_id, category_name
                    FROM product
                    JOIN category USING(category_id)
                    WHERE product_name = ? AND discontinued = 1
                """, (product,))
                category_id = cursor.fetchall()
                cursor.execute("""
                    UPDATE product SET price = ?
                    WHERE product_name = ? AND discontinued = 1
                """, (int(message.text), product))
                con.commit()
                bot.send_message(message.chat.id, f"–¢–æ–≤–∞—Ä: {product}\n–ù–æ–≤–∞—è —Ü–µ–Ω–∞: {message.text} —Å—É–º")
                catalog_1(message, category_id[0][1])
        else:
            bot.send_message(message.chat.id, f"–í—ã –Ω–µ –∞–¥–º–∏–Ω")

    except Exception as ex:
        if con:
            con.rollback()
        bot.send_message(message.chat.id,
                         f"–í–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Ç—Ä–µ–±—É–µ–º–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
                         reply_markup=catalog_button_for_admin())
        catalog_1(message, category)

    finally:
        if con:
            con.close()



def cart_get(message):
    con = None
    cart = ""
    try:
        if message.from_user.id == admin:
            con = conn()
            cursor = con.cursor()
            cursor.execute("""
                SELECT product_name, price, quantity, quantity * price, phone, restaurant_name 
                FROM cart 
                JOIN product USING(product_id) 
                JOIN users USING(user_id)
            """)
            product = cursor.fetchall()
            if product:
                for i in range(len(product)):
                    cart += (
                        f"–ü—Ä–æ–¥—É–∫—Ç: <b>{product[i][0]}</b>\n–¶–µ–Ω–∞: <b>{product[i][1]:,} —Å—É–º!</b>\n"
                        f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: <b>{product[i][2]}\n</b>"
                        f"–ò—Ç–æ–≥–æ: <b>{product[i][3]:,}</b> —Å—É–º\n\n–†–µc—Ç–æ—Ä–∞–Ω: <b>{product[0][5]}</b>\n"
                        f"–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: <b>{product[0][4]}</b>").replace(',', ' ')
                bot.send_message(admin, f"{cart}", reply_markup=catalog_button_for_admin(), parse_mode="HTML")
            else:
                bot.send_message(message.chat.id, f"–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞!", reply_markup=catalog_button_for_admin())
        else:
            bot.send_message(message.chat.id, f"–≤—ã –Ω–µ –∞–¥–º–∏–Ω!")

    except Exception as ex:
        bot.send_message(admin, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞{ex}", reply_markup=catalog_button_for_admin())

    finally:
        if con:
            con.close()


if __name__ == "__main__":
    try:
        print("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞!")
        bot.infinity_polling()
    except Exception as ex:
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ {ex}")
